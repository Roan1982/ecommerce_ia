# Generated by Django 5.2.6 on 2025-09-26 11:01

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tienda', '0012_newslettersubscription_newslettercampaign_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre identificador de la plantilla', max_length=100, unique=True)),
                ('tipo', models.CharField(choices=[('registro', 'Registro de Usuario'), ('recuperacion', 'Recuperación de Contraseña'), ('pedido_confirmacion', 'Confirmación de Pedido'), ('pedido_actualizacion', 'Actualización de Pedido'), ('pedido_envio', 'Pedido Enviado'), ('pedido_entrega', 'Pedido Entregado'), ('bienvenida', 'Bienvenida'), ('newsletter_bienvenida', 'Bienvenida Newsletter'), ('carrito_abandonado', 'Carrito Abandonado'), ('producto_descuento', 'Producto con Descuento'), ('puntos_acumulados', 'Puntos de Lealtad'), ('custom', 'Personalizado')], default='custom', max_length=30)),
                ('asunto', models.CharField(help_text='Asunto del email', max_length=200)),
                ('contenido_html', models.TextField(help_text='Contenido HTML de la plantilla')),
                ('contenido_texto', models.TextField(blank=True, help_text='Versión texto plano', null=True)),
                ('variables_disponibles', models.JSONField(blank=True, default=dict, help_text='Variables disponibles en la plantilla (JSON)')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plantilla de Email',
                'verbose_name_plural': 'Plantillas de Email',
                'ordering': ['tipo', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(help_text='Tipo de notificación', max_length=50)),
                ('email_destino', models.EmailField(max_length=254)),
                ('asunto', models.CharField(max_length=200)),
                ('contenido_html', models.TextField()),
                ('contenido_texto', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('enviado', 'Enviado'), ('fallido', 'Fallido'), ('reintentando', 'Reintentando')], default='pendiente', max_length=20)),
                ('prioridad', models.CharField(choices=[('baja', 'Baja'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', max_length=20)),
                ('intentos_envio', models.IntegerField(default=0)),
                ('max_intentos', models.IntegerField(default=3)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_envio', models.DateTimeField(blank=True, null=True)),
                ('fecha_programada', models.DateTimeField(blank=True, help_text='Fecha programada para envío', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Información adicional en JSON')),
                ('error_mensaje', models.TextField(blank=True, null=True)),
                ('pedido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notificaciones', to='tienda.pedido')),
                ('producto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notificaciones', to='tienda.producto')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones_email', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notificación por Email',
                'verbose_name_plural': 'Notificaciones por Email',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='EmailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('procesando', 'Procesando'), ('enviado', 'Enviado'), ('fallido', 'Fallido')], default='pendiente', max_length=20)),
                ('prioridad', models.IntegerField(default=0, help_text='Prioridad numérica (mayor = más prioritario)')),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_procesamiento', models.DateTimeField(blank=True, null=True)),
                ('bloqueado_hasta', models.DateTimeField(blank=True, help_text='Fecha hasta la que está bloqueado', null=True)),
                ('notificacion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cola', to='tienda.emailnotification')),
            ],
            options={
                'verbose_name': 'Email en Cola',
                'verbose_name_plural': 'Emails en Cola',
                'ordering': ['-prioridad', 'fecha_creacion'],
            },
        ),
        migrations.AddIndex(
            model_name='emailnotification',
            index=models.Index(fields=['estado', 'prioridad'], name='tienda_emai_estado_88adba_idx'),
        ),
        migrations.AddIndex(
            model_name='emailnotification',
            index=models.Index(fields=['fecha_programada'], name='tienda_emai_fecha_p_01b094_idx'),
        ),
        migrations.AddIndex(
            model_name='emailnotification',
            index=models.Index(fields=['usuario', 'tipo'], name='tienda_emai_usuario_d195e2_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['estado', 'bloqueado_hasta'], name='tienda_emai_estado_4fcc87_idx'),
        ),
        migrations.AddIndex(
            model_name='emailqueue',
            index=models.Index(fields=['prioridad'], name='tienda_emai_priorid_ce4aeb_idx'),
        ),
    ]
