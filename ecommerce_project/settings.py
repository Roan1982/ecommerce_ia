"""
Django settings for ecommerce_project project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Use PyMySQL as MySQLdb shim when running on PythonAnywhere
try:
    import pymysql
    pymysql.install_as_MySQLdb()
except Exception:
    # If PyMySQL is not installed in the current environment this will be
    # a no-op here; the import error will surface when attempting to connect.
    pass

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Read SECRET_KEY from environment in production; keep the existing key as a
# fallback for local development only.
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-rcfj=uozjc@$=w8rhh+-43-*xsc_a+s6yt5#jm05h(tx*p$tf!')

# SECURITY WARNING: don't run with debug turned on in production!
# Turn DEBUG off for production deployments. You can re-enable locally
# by setting an environment variable if needed.
DEBUG = os.environ.get('DJANGO_DEBUG', 'False') == 'True'

# Add your PythonAnywhere host here
ALLOWED_HOSTS = ['testserver', 'localhost', '127.0.0.1', 'RoanIaMusic.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'tienda',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', BASE_DIR / 'tienda' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'tienda.context_processors.carrito_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # Use environment variables when possible (recommended on PythonAnywhere).
        # Fallback values are the ones you provided.
        'NAME': os.environ.get('PA_DB_NAME', 'RoanIaMusic$ecommerce'),
        'USER': os.environ.get('PA_DB_USER', 'RoanIaMusic'),
        'PASSWORD': os.environ.get('PA_DB_PASSWORD', 'Roan1982'),
        'HOST': os.environ.get('PA_DB_HOST', 'RoanIaMusic.mysql.pythonanywhere-services.com'),
        'PORT': os.environ.get('PA_DB_PORT', '3306'),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / 'tienda' / 'static',
]

# Directory where `collectstatic` will gather static files for the webserver.
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # Para desarrollo
DEFAULT_FROM_EMAIL = 'noreply@ecommerceia.com'
SITE_URL = 'http://127.0.0.1:8000'  # URL del sitio para enlaces en emails

# Site configuration
SITE_ID = 1

# Session configuration
SESSION_COOKIE_AGE = 900  # 15 minutos en segundos
SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # La sesi贸n expira cuando se cierra el navegador
SESSION_SAVE_EVERY_REQUEST = True  # Actualiza el tiempo de expiraci贸n en cada request

# Configuraciones adicionales de seguridad para sesiones
SESSION_COOKIE_HTTPONLY = True  # Previene acceso a cookies desde JavaScript
SESSION_COOKIE_SECURE = False  # False para desarrollo (True en producci贸n con HTTPS)
SESSION_COOKIE_SAMESITE = 'Lax'  # Protecci贸n contra CSRF
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Almacenar sesiones en BD
